package com.megatrex4.mixin;

import com.megatrex4.items.vajraItem;
import net.minecraft.client.item.TooltipContext;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.text.Text;
import net.minecraft.world.World;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Inject;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;

import java.util.List;

@Mixin(Item.class)
public abstract class ToolTooltipMixin {

    @Inject(method = "appendTooltip", at = @At("HEAD"), cancellable = true)
    private void modifyToolTooltip(ItemStack stack, World world, List<Text> tooltip, TooltipContext context, CallbackInfo ci) {
        // Check if the item is a vajraItem
        if ((Object) this instanceof vajraItem) {
            vajraItem vajra = (vajraItem) (Object) this;

            // Replace default tooltip with custom values
            tooltip.clear();
            tooltip.add(Text.translatable("item.augmented_reborn.vajra.tooltip.mode",
                    Text.translatable("item.augmented_reborn.vajra.mode." + vajra.getEnergyMode(stack).toLowerCase())));

            // Add dynamic damage value
            float damage = vajra.getDamage(stack);
            tooltip.add(Text.of("Damage: " + damage));

            // Prevent further processing of the default tooltip
            ci.cancel();
        }
    }
}
